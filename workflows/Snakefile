configfile: "config/config.yaml"
import pandas as pd

rule all:
    input:
        "results/chains/comparisons.png"

rule test_chain:
    output:
        temp("data/benchmarks/n_nodes={n_nodes}.csv")
    params:
        n_nodes=lambda w: w.n_nodes
    threads: 6
    shell:
        "mpiexec -n {threads} python scripts/test_chain.py {params.n_nodes} {output}"

rule aggregate_chain_tests:
    input:
        expand("data/benchmarks/n_nodes={n_nodes}.csv", n_nodes=config['benchmarks']['n_nodes'])
    output:
        "data/benchmarks/chains.csv"
    run:
        pd.concat(
            (pd.read_csv(file).set_index('replica') for file in input),
            keys=config['benchmarks']['n_nodes'],
            names=['n_nodes']
        ).to_csv(output[0])

rule visualize_chains:
    input:
        "data/benchmarks/chains.csv"
    output:
        report(
            "results/chains/comparisons.png",
            category="Plots"
        )
    threads: 1
    run:
        import matplotlib 
        matplotlib.use('Agg')
        import seaborn as sns 
        import matplotlib.pyplot as plt 
        import pandas as pd

        df = pd.read_csv(input[0])
        fig, axes = plt.subplots(2,1,figsize=(10,10), dpi=300)
        sns.lineplot(df, x='step', y='beta', hue='n_nodes', style='replica', ax=axes[0])
        sns.lineplot(df, x='step', y='energy', hue='n_nodes', style='replica', ax=axes[1])

        plt.savefig(output[0], bbox_inches='tight')
    